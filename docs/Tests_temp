import sys
import random
from typing import List, Tuple
from stemmabench.stemma_generator import Stemma
from stemmabench.config_parser import StemmaBenchConfig
from loguru import logger
# Set logging level to info
logger.remove()
logger.add(sys.stderr, level="INFO")

# GENERATE FAKE TEXT.
def generate_fake_text(num_phrases):
    phrases = []
    for i in range(1, num_phrases + 1):
        phrase = f"Phrase {i}."
        phrases.append(phrase)

    fake_text = " ".join(phrases)
    return fake_text

DEMO_TEXT = generate_fake_text(100)
print(f"""{DEMO_TEXT[:50]} \n{DEMO_TEXT.split(". ")[:5]}""")


# STEMMABENCH TEST
## Configuration
config = StemmaBenchConfig(**{
    "meta": {
      "language": "eng"  
    },
    "stemma": {
        "depth": 2,
        "width": {
            "law": "Uniform",
            "min": 2,
            "max": 3
        },
        "fragmentation": {
            "law": "Bernouilli",
            "rate": 1
        }
    },
    "variants": {
        "sentences": {
            "duplicate": {
                "args": {"nbr_words": 1},
                "law": "Bernouilli",
                "rate": 0.05
            },
            # "delete": {
            #     "law": "Bernouilli",
            #     "rate": 0.01
            # }
        },
        "words": {
            "synonym": {
                "law": "Bernouilli",
                "rate": 0.05,
                "args": {}
            },
            "mispell": {
                "law": "Bernouilli",
                "rate": 0.001,
                "args": {}
            },
            "omit": {
                "law": "Bernouilli",
                "rate": 0.001,
                "args": {}
            }
        },
        "texts": {
            "fragment": {
                "rate": 0.001,
                # "spread":,
                # sentences_weigths:, 
            }
        }
    }
})

## Create a stemma object.
stemma = Stemma(original_text=DEMO_TEXT, config=config)
## Generate a tradition.
print(stemma.generate())

## Lookup table.
print(stemma.texts_lookup)
## Edges.
stemma.edges

